-- ZAD 5
for $book in doc("db/bib/bib.xml")//book
for $author in $book/author
return $author/last

-- ZAD 6
for $book in doc("db/bib/bib.xml")//book
for $title in $book/title
for $author in $book/author
return 
  <ksiazka>
    <author>
      {$author/last}
      {$author/first}
    </author>
    {$title}
  </ksiazka>

-- ZAD 7
for $book in doc("db/bib/bib.xml")//book
for $title in $book/title
for $author in $book/author
return 
  <ksiazka>
    <autor>
      {$author/last/text()}{$author/first/text()}
    </autor>
    <tytul>
    {$title/text()}
    </tytul>
  </ksiazka>

-- ZAD 8
for $book in doc("db/bib/bib.xml")//book
for $title in $book/title
for $author in $book/author
return 
  <ksiazka>
    <autor>
      {$author/last/text() || ' ' || $author/first/text()}
    </autor>
    <tytul>
    {$title/text()}
    </tytul>
  </ksiazka>

-- ZAD 9
<wynik>
{
  for $book in doc("db/bib/bib.xml")//book
  for $title in $book/title
  for $author in $book/author
  return 
    <ksiazka>
      <autor>
        {$author/last/text() || ' ' || $author/first/text()}
      </autor>
      <tytul>
      {$title/text()}
      </tytul>
    </ksiazka>
}
</wynik>

-- ZAD 10
<imiona>
  {
    for $book in doc("db/bib/bib.xml")//book
    where $book/title = "Data on the Web"
    for $author in $book/author
    return 
      <imie>
        {$author/first/text()}
      </imie>
  }
</imiona>

-- ZAD 11
-- Wyrażenie ścieżkowe:
<DataOnTheWeb>
  {
    doc("db/bib/bib.xml")//book[title = "Data on the Web"]
  }
</DataOnTheWeb>

-- Klauzula WHERE:
<DataOnTheWeb>
  {
    for $book in doc("db/bib/bib.xml")//book
    where $book/title = "Data on the Web"
    return $book
  }
</DataOnTheWeb>

-- ZAD 12
<Data>
  {
    for $book in doc("db/bib/bib.xml")//book
    where contains($book/title, "Data")
    for $author in $book/author
    return <nazwisko>{$author/last/text()}</nazwisko>
  }
</Data>

-- ZAD 13
<Data>
  {
    for $book in doc("db/bib/bib.xml")//book
    where contains($book/title, "Data")
    return (
      $book/title,
      for $author in $book/author
      return <nazwisko>{$author/last/text()}</nazwisko>
    )
  }
</Data>

-- ZAD 14
for $book in doc("db/bib/bib.xml")//book
where count($book/author) <= 2
return $book/title

-- ZAD 15
for $book in doc("db/bib/bib.xml")//book
return 
  <ksiazka>
    {$book/title}
    <autorow>{count($book/author)}</autorow>
  </ksiazka>

-- ZAD 16
let $years := doc("db/bib/bib.xml")//book/@year
return
  <przedział>{min($years)} - {max($years)}</przedział>

-- ZAD 17
let $prices := doc("db/bib/bib.xml")//book/price
return
  <różnica>{max($prices) - min($prices)}</różnica>

-- ZAD 18
let $minPrice := min(doc("db/bib/bib.xml")//book/price)
return
  <najtańsze>
  {
    for $book in doc("db/bib/bib.xml")//book
    where $book/price = $minPrice
    return 
      <najtańsza>
        {$book/title},
        {
          for $author in $book/author
          return 
            <author>{$author/last}{$author/first}</author>
        }
      </najtańsza>
  }
  </najtańsze>

-- ZAD 19
for $author in distinct-values(doc("db/bib/bib.xml")//author/last/text())
return 
  <autor>
    {
      <last>{$author}</last>,
      for $book in doc("db/bib/bib.xml")//book[author/last = $author]
      return $book/title
    }
  </autor>

-- ZAD 20
<wynik>
  {
    for $play in collection("db/shakespeare")//PLAY
    return $play/TITLE
  }
</wynik>

-- ZAD 21
for $play in collection("db/shakespeare")//PLAY
where some $line in $play//LINE satisfies contains($line, "or not to be")
return $play/TITLE

-- ZAD 22
<wynik>
  {
    for $play in collection("db/shakespeare")//PLAY
    let $title := $play/TITLE/text()
    let $characters := count($play//PERSONA)
    let $acts := count($play//ACT)
    let $scenes := count($play//SCENE)
    return 
      <sztuka tytul="{$title}">
        <postaci>{$characters}</postaci>
        <aktow>{$acts}</aktow>
        <scen>{$scenes}</scen>
      </sztuka>
  }
</wynik>
